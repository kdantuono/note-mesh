version: '3.8'

services:
  # PostgreSQL database for development
  postgres:
    image: postgres:15-alpine
    container_name: notemesh-postgres-dev
    environment:
      POSTGRES_DB: notemesh
      POSTGRES_USER: notemesh
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U notemesh -d notemesh" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - notemesh-dev

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: notemesh-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --requirepass devpassword
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - notemesh-dev

  # Backend FastAPI application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: notemesh-backend-dev
    environment:
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://notemesh:password@postgres:5432/notemesh
      - REDIS_URL=redis://:devpassword@redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://127.0.0.1:3000"]
      - CORS_ALLOW_CREDENTIALS=true
      - RELOAD=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/tests:/app/tests:ro
      - ./backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        python -m alembic upgrade head &&
        echo 'Starting development server with hot reload...' &&
        uvicorn notemesh.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - notemesh-dev

  # Frontend nginx server with development settings
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: notemesh-frontend-dev
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./docker/nginx/default.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
      - API_BASE_URL=http://localhost:8000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - notemesh-dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  notemesh-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
